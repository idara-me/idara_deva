{
  "version": 3,
  "sources": ["../../../../../apps/idara_deva/idara_deva/public/js/bulk_operations.js", "../../../../../apps/idara_deva/idara_deva/public/js/list_settings.js", "../../../../../apps/idara_deva/idara_deva/public/js/list_view_override.js", "../../../../../apps/idara_deva/idara_deva/public/js/auto_add_row_shortcut.js", "../../../../../apps/idara_deva/idara_deva/public/js/add_form_paggination.js", "../../../../../apps/idara_deva/idara_deva/public/js/remove_confirmation_on_submit.js", "../../../../../apps/idara_deva/idara_deva/public/js/simplified_item_variants_selection.js"],
  "sourcesContent": ["export default class BulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__(\"Doctype required\"));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint(docs) {\n\t\tconst print_settings = frappe.model.get_doc(\":Print Settings\", \"Print Settings\");\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\t\tconst letterheads = this.get_letterhead_options();\n\t\tconst MAX_PRINT_LIMIT = 500;\n\n\t\tconst valid_docs = docs\n\t\t\t.filter((doc) => {\n\t\t\t\treturn (\n\t\t\t\t\t!is_submittable ||\n\t\t\t\t\tdoc.docstatus === 1 ||\n\t\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\t\tfrappe.user.has_role(\"Administrator\")\n\t\t\t\t);\n\t\t\t})\n\t\t\t.map((doc) => doc.name);\n\n\t\tconst invalid_docs = docs.filter((doc) => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__(\"You selected Draft or Cancelled documents\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__(\"Select atleast 1 record for printing\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length > MAX_PRINT_LIMIT) {\n\t\t\tfrappe.msgprint(\n\t\t\t\t__(\"You can only print upto {0} documents at a time\", [MAX_PRINT_LIMIT])\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Print Documents\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Letter Head\"),\n\t\t\t\t\tfieldname: \"letter_sel\",\n\t\t\t\t\toptions: letterheads,\n\t\t\t\t\tdefault: letterheads[0],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Print Format\"),\n\t\t\t\t\tfieldname: \"print_sel\",\n\t\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype),\n\t\t\t\t\tdefault: frappe.get_meta(this.doctype).default_print_format,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Page Size\"),\n\t\t\t\t\tfieldname: \"page_size\",\n\t\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\t\tdefault: print_settings.pdf_page_size,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Height (in mm)\"),\n\t\t\t\t\tfieldname: \"page_height\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_height,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Width (in mm)\"),\n\t\t\t\t\tfieldname: \"page_width\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_width,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tdialog.set_primary_action(__(\"Print\"), (args) => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__(\"Page height and width cannot be zero\"));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({\n\t\t\t\t\t\"page-height\": args.page_height,\n\t\t\t\t\t\"page-width\": args.page_width,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tfrappe\n\t\t\t\t.call(\"frappe.utils.print_format.download_multi_pdf_async\", {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tname: json_string,\n\t\t\t\t\tformat: print_format,\n\t\t\t\t\tno_letterhead: with_letterhead ? \"0\" : \"1\",\n\t\t\t\t\tletterhead: letterhead,\n\t\t\t\t\toptions: pdf_options,\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tlet task_id = response.message.task_id;\n\t\t\t\t\tfrappe.realtime.task_subscribe(task_id);\n\t\t\t\t\tfrappe.realtime.on(`task_complete:${task_id}`, (data) => {\n\t\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\t\ttitle: __(\"Bulk PDF Export\"),\n\t\t\t\t\t\t\tmessage: __(\"Your PDF is ready for download\"),\n\t\t\t\t\t\t\tprimary_action: {\n\t\t\t\t\t\t\t\tlabel: __(\"Download PDF\"),\n\t\t\t\t\t\t\t\tclient_action: \"window.open\",\n\t\t\t\t\t\t\t\targs: data.file_url,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfrappe.realtime.task_unsubscribe(task_id);\n\t\t\t\t\t\tfrappe.realtime.off(`task_complete:${task_id}`);\n\t\t\t\t\t});\n\t\t\t\t\tdialog.hide();\n\t\t\t\t});\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options() {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Letter Head\",\n\t\t\t\tfields: [\"name\", \"is_default\"],\n\t\t\t\tfilters: { disabled: 0 },\n\t\t\t\tlimit_page_length: 0,\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach((letterhead) => {\n\t\t\t\t\t\tif (letterhead.is_default) {\n\t\t\t\t\t\t\tletterhead_options.unshift(letterhead.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete(docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.desk.reportview.delete_items\",\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message:\n\t\t\t\t\tdocnames.length <= 10\n\t\t\t\t\t\t? __(\"Deleting {0} records...\", [docnames.length])\n\t\t\t\t\t\t: null,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t__(\"Cannot delete {0}\", [failed.map((f) => f.bold()).join(\", \")])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(\"delete\");\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: \"frappe.desk.form.assign_to.add_multiple\",\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done,\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__(\"Select records for assignment\"));\n\t\t}\n\t}\n\n\tapply_assignment_rule(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe\n\t\t\t\t.call(\"frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply\", {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tdocnames: docnames,\n\t\t\t\t})\n\t\t\t\t.then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel(docnames, action = \"submit\", done = null) {\n\t\taction = action.toLowerCase();\n\t\tconst task_id = Math.random().toString(36).slice(-5);\n\t\tfrappe.realtime.task_subscribe(task_id);\n\t\treturn frappe\n\t\t\t.xcall(\"frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\taction: action,\n\t\t\t\tdocnames: docnames,\n\t\t\t\ttask_id: task_id,\n\t\t\t})\n\t\t\t.then((failed_docnames) => {\n\t\t\t\tif (failed_docnames?.length) {\n\t\t\t\t\tconst comma_separated_records = frappe.utils.comma_and(failed_docnames);\n\t\t\t\t\tswitch (action) {\n\t\t\t\t\t\tcase \"submit\":\n\t\t\t\t\t\t\tfrappe.throw(__(\"Cannot submit {0}.\", [comma_separated_records]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"cancel\":\n\t\t\t\t\t\t\tfrappe.throw(__(\"Cannot cancel {0}.\", [comma_separated_records]));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tfrappe.throw(__(\"Cannot {0} {1}.\", [action, comma_separated_records]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (failed_docnames?.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tfrappe.realtime.task_unsubscribe(task_id);\n\t\t\t});\n\t}\n\n\tedit(docnames, field_mappings, done) {\n\t\tlet field_options = Object.keys(field_mappings).sort(function (a, b) {\n\t\t\treturn __(cstr(field_mappings[a].label)).localeCompare(\n\t\t\t\tcstr(__(field_mappings[b].label))\n\t\t\t);\n\t\t});\n\t\tconst status_regex = /status/i;\n\n\t\tconst default_field = field_options.find((value) => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Bulk Edit\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: field_options,\n\t\t\t\t\tdefault: default_field,\n\t\t\t\t\tlabel: __(\"Field\"),\n\t\t\t\t\tfieldname: \"field\",\n\t\t\t\t\treqd: 1,\n\t\t\t\t\tonchange: () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tlabel: __(\"Value\"),\n\t\t\t\t\tfieldname: \"value\",\n\t\t\t\t\tonchange() {\n\t\t\t\t\t\tshow_help_text();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value(\"field\")].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe\n\t\t\t\t\t.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\t\taction: \"update\",\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t[fieldname]: value || null,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t__(\"Cannot update {0}\", [\n\t\t\t\t\t\t\t\t\tfailed.map((f) => (f.bold ? f.bold() : f)).join(\", \"),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\tfrappe.show_alert(__(\"Updated successfully\"));\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __(\"Update {0} records\", [docnames.length]),\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\t\tshow_help_text();\n\n\t\tfunction set_value_field(dialogObj) {\n\t\t\tconst new_df = Object.assign({}, field_mappings[dialogObj.get_value(\"field\")]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (\n\t\t\t\tnew_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === \"Select\" &&\n\t\t\t\t!new_df.default\n\t\t\t) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __(\"Value\");\n\t\t\tnew_df.onchange = show_help_text;\n\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field(\"value\", new_df);\n\t\t\tshow_help_text();\n\t\t}\n\n\t\tfunction show_help_text() {\n\t\t\tlet value = dialog.get_value(\"value\");\n\t\t\tif (value == null || value === \"\") {\n\t\t\t\tdialog.set_df_property(\n\t\t\t\t\t\"value\",\n\t\t\t\t\t\"description\",\n\t\t\t\t\t__(\"You have not entered a value. The field will be set to empty.\")\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdialog.set_df_property(\"value\", \"description\", \"\");\n\t\t\t}\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\tadd_tags(docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add Tags\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"MultiSelectPills\",\n\t\t\t\t\tfieldname: \"tags\",\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\ttags: args.tags,\n\t\t\t\t\t\t\tdt: this.doctype,\n\t\t\t\t\t\t\tdocs: docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n\n\texport(doctype, docnames) {\n\t\tfrappe.require(\"data_import_tools.bundle.js\", () => {\n\t\t\tconst data_exporter = new frappe.data_import.DataExporter(\n\t\t\t\tdoctype,\n\t\t\t\t\"Insert New Records\"\n\t\t\t);\n\t\t\tdata_exporter.dialog.set_value(\"export_records\", \"by_filter\");\n\t\t\tdata_exporter.filter_group.add_filters_to_filter_group([\n\t\t\t\t[doctype, \"name\", \"in\", docnames, false],\n\t\t\t]);\n\t\t});\n\t}\n}\n", "export default class ListSettings {\n\tconstructor({ listview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(\"DocType required\");\n\t\t}\n\n\t\tthis.listview = listview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields =\n\t\t\tthis.settings && this.settings.fields ? JSON.parse(this.settings.fields) : [];\n\t\tthis.subject_field = null;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_listview_fields(meta);\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\n\t\tlet list_view_settings = frappe.get_meta(\"List View Settings\");\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(me.doctype)]),\n\t\t\tfields: list_view_settings.fields,\n\t\t});\n\t\tme.dialog.set_values(me.settings);\n\t\tme.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tlet values = me.dialog.get_values();\n\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\",\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.list_view_settings.list_view_settings.save_listview_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\tlistview_settings: values,\n\t\t\t\t\tremoved_listview_fields: me.removed_fields || [],\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.listview.refresh_columns(r.message.meta, r.message.listview_settings);\n\t\t\t\t\tme.dialog.hide();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tme.dialog.fields_dict[\"total_fields\"].df.onchange = () => me.refresh();\n\t}\n\n\trefresh() {\n\t\tlet me = this;\n\n\t\tme.setup_fields();\n\t\tme.add_new_fields();\n\t\tme.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tlet me = this;\n\n\t\tif (!this.settings.fields) {\n\t\t\tme.update_fields();\n\t\t}\n\n\t\tif (!me.dialog.get_value(\"total_fields\")) {\n\t\t\tlet field_count = me.fields.length;\n\n\t\t\tif (field_count < 4) {\n\t\t\t\tfield_count = 4;\n\t\t\t} else if (field_count > 10) {\n\t\t\t\tfield_count = 10;\n\t\t\t}\n\n\t\t\tme.dialog.set_value(\"total_fields\", field_count);\n\t\t}\n\n\t\tme.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tfunction is_status_field(field) {\n\t\t\treturn field.fieldname === \"status_field\";\n\t\t}\n\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\t\tlet fields = ``;\n\t\tlet total_fields = me.dialog.get_values().total_fields || me.settings.total_fields;\n\n\t\tfor (let idx in me.fields) {\n\t\t\tif (idx == parseInt(total_fields)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet is_sortable = idx == 0 ? `` : `sortable`;\n\t\t\tlet show_sortable_handle = idx == 0 ? `hide` : ``;\n\t\t\tlet can_remove = idx == 0 || is_status_field(me.fields[idx]) ? `hide` : ``;\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order ${is_sortable}\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\" data-fieldname=\"${me.fields[idx].fieldname}\"\n\t\t\t\t\tdata-label=\"${me.fields[idx].label}\" data-type=\"${me.fields[idx].type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle \" + show_sortable_handle)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${__(me.fields[idx].label, null, me.doctype)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-1 ${can_remove}\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${me.fields[idx].fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">${__(\"Fields\")}</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t${__(\"+ Add / Remove Fields\")}\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".sortable\",\n\t\t\tonUpdate: () => {\n\t\t\t\tme.update_fields();\n\t\t\t\tme.refresh();\n\t\t\t},\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet add_new_fields = fields_html.$wrapper[0].getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => me.column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet remove_fields = fields_html.$wrapper[0].getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tme.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tremove_fields(fieldname) {\n\t\tlet me = this;\n\t\tlet existing_fields = me.fields.map((f) => f.fieldname);\n\n\t\tfor (let idx in me.fields) {\n\t\t\tlet field = me.fields[idx];\n\n\t\t\tif (field.fieldname == fieldname) {\n\t\t\t\tme.fields.splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tme.set_removed_fields(\n\t\t\tme.get_removed_listview_fields(\n\t\t\t\tme.fields.map((f) => f.fieldname),\n\t\t\t\texisting_fields\n\t\t\t)\n\t\t);\n\t\tme.refresh();\n\t\tme.update_fields();\n\t}\n\n\tupdate_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tme.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tme.fields.push({\n\t\t\t\tfieldname: fields_order.item(idx).getAttribute(\"data-fieldname\"),\n\t\t\t\tlabel: __(fields_order.item(idx).getAttribute(\"data-label\")),\n\t\t\t});\n\t\t}\n\n\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\tme.dialog.get_value(\"fields\");\n\t}\n\n\tcolumn_selector() {\n\t\tlet me = this;\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(me.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Reset Fields\"),\n\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\tfieldname: \"reset_fields\",\n\t\t\t\t\tclick: () => me.reset_listview_fields(d),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: me.get_doctype_fields(\n\t\t\t\t\t\tme.meta,\n\t\t\t\t\t\tme.fields.map((f) => f.fieldname)\n\t\t\t\t\t),\n\t\t\t\t\tcolumns: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\td.set_primary_action(__(\"Save\"), () => {\n\t\t\tlet values = d.get_values().fields;\n\n\t\t\tme.set_removed_fields(\n\t\t\t\tme.get_removed_listview_fields(\n\t\t\t\t\tvalues,\n\t\t\t\t\tme.fields.map((f) => f.fieldname)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tme.fields = [];\n\t\t\tme.set_subject_field(me.meta);\n\t\t\tme.set_status_field();\n\n\t\t\tfor (let idx in values) {\n\t\t\t\tlet value = values[idx];\n\n\t\t\t\tif (me.fields.length === parseInt(me.dialog.get_values().total_fields)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value != me.subject_field.fieldname) {\n\t\t\t\t\tlet field = frappe.meta.get_docfield(me.doctype, value);\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tme.fields.push({\n\t\t\t\t\t\t\tlabel: __(field.label, null, me.doctype),\n\t\t\t\t\t\t\tfieldname: field.fieldname,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.refresh();\n\t\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\t\td.hide();\n\t\t});\n\t\td.show();\n\t}\n\n\treset_listview_fields(dialog) {\n\t\tlet me = this;\n\n\t\tfrappe\n\t\t\t.xcall(\n\t\t\t\t\"frappe.desk.doctype.list_view_settings.list_view_settings.get_default_listview_fields\",\n\t\t\t\t{\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((fields) => {\n\t\t\t\tlet field = dialog.get_field(\"fields\");\n\t\t\t\tfield.df.options = me.get_doctype_fields(me.meta, fields);\n\t\t\t\tdialog.refresh();\n\t\t\t});\n\t}\n\n\tget_listview_fields(meta) {\n\t\tlet me = this;\n\n\t\tif (!me.settings.fields) {\n\t\t\tme.set_list_view_fields(meta);\n\t\t} else {\n\t\t\tme.fields = JSON.parse(this.settings.fields);\n\t\t}\n\n\t\tme.fields.uniqBy((f) => f.fieldname);\n\t}\n\n\tset_list_view_fields(meta) {\n\t\tlet me = this;\n\n\t\tme.set_subject_field(meta);\n\t\tme.set_status_field();\n\n\t\tmeta.fields.forEach((field) => {\n\t\t\tif (\n\t\t\t\tfield.in_list_view &&\n\t\t\t\t!frappe.model.no_value_type.includes(field.fieldtype) &&\n\t\t\t\tme.subject_field.fieldname != field.fieldname\n\t\t\t) {\n\t\t\t\tme.fields.push({\n\t\t\t\t\tlabel: __(field.label, null, me.doctype),\n\t\t\t\t\tfieldname: field.fieldname,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_subject_field(meta) {\n\t\tlet me = this;\n\n\t\tme.subject_field = {\n\t\t\tlabel: __(\"ID\"),\n\t\t\tfieldname: \"name\",\n\t\t};\n\n\t\tif (meta.title_field) {\n\t\t\tlet field = frappe.meta.get_docfield(me.doctype, meta.title_field.trim());\n\n\t\t\tme.subject_field = {\n\t\t\t\tlabel: __(field.label, null, me.doctype),\n\t\t\t\tfieldname: field.fieldname,\n\t\t\t};\n\t\t}\n\n\t\tme.fields.push(me.subject_field);\n\t}\n\n\tset_status_field() {\n\t\tlet me = this;\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tme.fields.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t\tlabel: __(\"Status\"),\n\t\t\t\tfieldname: \"status_field\",\n\t\t\t});\n\t\t}\n\t}\n\n\tget_doctype_fields(meta, fields) {\n\t\tlet multiselect_fields = [];\n\n\t\tmeta.fields.forEach((field) => {\n\t\t\tif (!frappe.model.no_value_type.includes(field.fieldtype)) {\n\t\t\t\tmultiselect_fields.push({\n\t\t\t\t\tlabel: __(field.label, null, field.doctype),\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: fields.includes(field.fieldname),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn multiselect_fields;\n\t}\n\n\tget_removed_listview_fields(new_fields, existing_fields) {\n\t\tlet me = this;\n\t\tlet removed_fields = [];\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tnew_fields.push(\"status_field\");\n\t\t}\n\n\t\texisting_fields.forEach((column) => {\n\t\t\tif (!new_fields.includes(column)) {\n\t\t\t\tremoved_fields.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn removed_fields;\n\t}\n\n\tset_removed_fields(fields) {\n\t\tlet me = this;\n\n\t\tif (me.removed_fields) {\n\t\t\tme.removed_fields = me.removed_fields.concat(fields);\n\t\t} else {\n\t\t\tme.removed_fields = fields;\n\t\t}\n\t}\n}\n", "import BulkOperations from \"./bulk_operations\";\nimport ListSettings from \"./list_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ListView = class ListView extends frappe.views.BaseList {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\tif (route.length === 2) {\n\t\t\tconst user_settings = frappe.get_user_settings(doctype);\n\t\t\tconst last_view = user_settings.last_view;\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tfrappe.router.doctype_layout || doctype,\n\t\t\t\tfrappe.views.is_valid(last_view) ? last_view.toLowerCase() : \"list\"\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(opts) {\n\t\tconsole.log(\"custom List view\");\n\t\tsuper(opts);\n\t\tthis.show();\n\t\tthis.debounced_refresh = frappe.utils.debounce(\n\t\t\tthis.process_document_refreshes.bind(this),\n\t\t\t2000\n\t\t);\n\t\tthis.count_upper_bound = 1001;\n\t\tthis._element_factory = new ElementFactory(this.doctype);\n\t}\n\n\thas_permissions() {\n\t\treturn frappe.perm.has_perm(this.doctype, 0, \"read\");\n\t}\n\n\tshow() {\n\t\tthis.parent.disable_scroll_to_top = true;\n\t\tsuper.show();\n\t}\n\n\tcheck_permissions() {\n\t\tif (!this.has_permissions()) {\n\t\t\tfrappe.set_route(\"\");\n\t\t\tfrappe.throw(__(\"Not permitted to view {0}\", [this.doctype]));\n\t\t}\n\t}\n\n\tshow_skeleton() {\n\t\tthis.$list_skeleton = this.parent.page.container.find(\".list-skeleton\");\n\t\tif (!this.$list_skeleton.length) {\n\t\t\tthis.$list_skeleton = $(`\n\t\t\t\t<div class=\"row list-skeleton\">\n\t\t\t\t\t<div class=\"col-lg-2\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\tthis.parent.page.container.find(\".page-content\").append(this.$list_skeleton);\n\t\t}\n\t\tthis.parent.page.container.find(\".layout-main\").hide();\n\t\tthis.$list_skeleton.show();\n\t}\n\n\thide_skeleton() {\n\t\tthis.$list_skeleton && this.$list_skeleton.hide();\n\t\tthis.parent.page.container.find(\".layout-main\").show();\n\t}\n\n\tget view_name() {\n\t\treturn \"List\";\n\t}\n\n\tget view_user_settings() {\n\t\treturn this.user_settings[this.view_name] || {};\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.view = \"List\";\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || this.sort_by || \"modified\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || this.sort_order || \"desc\";\n\n\t\t// build menu items\n\t\tthis.menu_items = this.menu_items.concat(this.get_menu_items());\n\n\t\t// set filters from view_user_settings or list_settings\n\t\tif (Array.isArray(this.view_user_settings.filters)) {\n\t\t\t// Priority 1: view_user_settings\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\tif (this.view_name == \"List\") this.toggle_paging = true;\n\n\t\tthis.patch_refresh_and_load_lib();\n\t\treturn this.get_list_view_settings();\n\t}\n\n\ton_sort_change(sort_by, sort_order) {\n\t\tthis.sort_by = sort_by;\n\t\tthis.sort_order = sort_order;\n\t\tsuper.on_sort_change();\n\t}\n\n\tvalidate_filters(filters) {\n\t\tlet valid_fields = this.meta.fields.map((df) => df.fieldname);\n\t\tvalid_fields = valid_fields.concat(frappe.model.std_fields_list);\n\t\treturn filters.filter((f) => valid_fields.includes(f[1])).uniqBy((f) => f[1]);\n\t}\n\n\tsetup_page() {\n\t\tthis.parent.list_view = this;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_page_head() {\n\t\tsuper.setup_page_head();\n\t\tthis.set_primary_action();\n\t\tthis.set_actions_menu_items();\n\t}\n\n\tset_actions_menu_items() {\n\t\tthis.actions_menu_items = this.get_actions_menu_items();\n\t\tthis.workflow_action_menu_items = this.get_workflow_action_menu_items();\n\t\tthis.workflow_action_items = {};\n\n\t\tconst actions = this.actions_menu_items.concat(this.workflow_action_menu_items);\n\t\tactions.forEach((item) => {\n\t\t\tconst $item = this.page.add_actions_menu_item(item.label, item.action, item.standard);\n\t\t\tif (item.class) {\n\t\t\t\t$item.addClass(item.class);\n\t\t\t}\n\t\t\tif (item.is_workflow_action && $item) {\n\t\t\t\t// can be used to dynamically show or hide action\n\t\t\t\tthis.workflow_action_items[item.name] = $item;\n\t\t\t}\n\t\t});\n\t}\n\n\tshow_restricted_list_indicator_if_applicable() {\n\t\tconst match_rules_list = frappe.perm.get_match_rules(this.doctype);\n\t\tif (match_rules_list.length) {\n\t\t\tthis.restricted_list = $(\n\t\t\t\t`<button class=\"btn btn-xs restricted-button flex align-center\">\n\t\t\t\t\t${frappe.utils.icon(\"restriction\", \"xs\")}\n\t\t\t\t</button>`\n\t\t\t)\n\t\t\t\t.click(() => this.show_restrictions(match_rules_list))\n\t\t\t\t.appendTo(this.page.page_form);\n\t\t}\n\t}\n\n\tshow_restrictions(match_rules_list = []) {\n\t\tfrappe.msgprint(\n\t\t\tfrappe.render_template(\"list_view_permission_restrictions\", {\n\t\t\t\tcondition_list: match_rules_list,\n\t\t\t}),\n\t\t\t__(\"Restrictions\", null, \"Title of message showing restrictions in list view\")\n\t\t);\n\t}\n\n\tget_fields() {\n\t\treturn super\n\t\t\t.get_fields()\n\t\t\t.concat(\n\t\t\t\tObject.entries(this.link_field_title_fields || {}).map(\n\t\t\t\t\t(entry) => entry.join(\".\") + \" as \" + entry.join(\"_\")\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tasync set_fields() {\n\t\tthis.link_field_title_fields = {};\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\tthis.settings.add_fields || [],\n\t\t\tthis.meta.track_seen ? \"_seen\" : null,\n\t\t\tthis.sort_by,\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"color\"\n\t\t);\n\n\t\tawait Promise.all(\n\t\t\tfields.map((f) => {\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\tconst df =\n\t\t\t\t\t\ttypeof f === \"string\" ? frappe.meta.get_docfield(this.doctype, f) : f;\n\t\t\t\t\tif (\n\t\t\t\t\t\tdf &&\n\t\t\t\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t\t\t\tfrappe.boot.link_title_doctypes.includes(df.options)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfrappe.model.with_doctype(df.options, () => {\n\t\t\t\t\t\t\tconst meta = frappe.get_meta(df.options);\n\t\t\t\t\t\t\tif (meta.show_title_field_in_link) {\n\t\t\t\t\t\t\t\tthis.link_field_title_fields[\n\t\t\t\t\t\t\t\t\ttypeof f === \"string\" ? f : f.fieldname\n\t\t\t\t\t\t\t\t] = meta.title_field;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._add_field(f);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._add_field(f);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\n\t\tthis.fields.forEach((f) => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (df && df.fieldtype === \"Currency\" && df.options && !df.options.includes(\":\")) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tpatch_refresh_and_load_lib() {\n\t\t// throttle refresh for 1s\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 1000);\n\t\tthis.load_lib = new Promise((resolve) => {\n\t\t\tif (this.required_libs) {\n\t\t\t\tfrappe.require(this.required_libs, resolve);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\t// call refresh every 5 minutes\n\t\tconst interval = 5 * 60 * 1000;\n\t\tsetInterval(() => {\n\t\t\t// don't call if route is different\n\t\t\tif (frappe.get_route_str() === this.page_name) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\tset_primary_action() {\n\t\tif (this.can_create && !frappe.boot.read_only) {\n\t\t\tconst doctype_name = __(frappe.router.doctype_layout) || __(this.doctype);\n\n\t\t\t// Better style would be __(\"Add {0}\", [doctype_name], \"Primary action in list view\")\n\t\t\t// Keeping it like this to not disrupt existing translations\n\t\t\tconst label = `${__(\"Add\", null, \"Primary action in list view\")} ${doctype_name}`;\n\t\t\tthis.page.set_primary_action(\n\t\t\t\tlabel,\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settings.primary_action) {\n\t\t\t\t\t\tthis.settings.primary_action();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.make_new_doc();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t} else {\n\t\t\tthis.page.clear_primary_action();\n\t\t}\n\t}\n\n\tmake_new_doc() {\n\t\tconst doctype = this.doctype;\n\t\tconst options = {};\n\t\tthis.filter_area.get().forEach((f) => {\n\t\t\tif (f[2] === \"=\" && frappe.model.is_non_std_field(f[1])) {\n\t\t\t\toptions[f[1]] = f[3];\n\t\t\t}\n\t\t});\n\t\tfrappe.new_doc(doctype, options);\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t\tthis.settings.onload && this.settings.onload(this);\n\t\tthis.show_restricted_list_indicator_if_applicable();\n\t}\n\n\trefresh_columns(meta, list_view_settings) {\n\t\tthis.meta = meta;\n\t\tthis.list_view_settings = list_view_settings;\n\n\t\tthis.setup_columns();\n\t\tthis.refresh(true);\n\t}\n\n\trefresh(refresh_header = false) {\n\t\treturn super.refresh().then(() => {\n\t\t\tthis.render_header(refresh_header);\n\t\t\tthis.update_checkbox();\n\t\t\tthis.update_url_with_filters();\n\t\t\tthis.setup_realtime_updates();\n\t\t});\n\t}\n\n\tupdate_checkbox(target) {\n\t\tif (!this.$checkbox_actions) return;\n\n\t\tlet $check_all_checkbox = this.$checkbox_actions.find(\".list-check-all\");\n\n\t\tif ($check_all_checkbox.prop(\"checked\") && target && !target.prop(\"checked\")) {\n\t\t\t$check_all_checkbox.prop(\"checked\", false);\n\t\t}\n\n\t\t$check_all_checkbox.prop(\"checked\", this.$checks.length === this.data.length);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $(\n\t\t\t`<div class=\"freeze flex justify-center align-center text-muted\">\n\t\t\t\t${__(\"Loading\")}...\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$result.append(this.$freeze);\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\n\t\tconst get_df = frappe.meta.get_docfield.bind(null, this.doctype);\n\n\t\t// 1st column: title_field or name\n\t\tif (this.meta.title_field) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: get_df(this.meta.title_field),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.columns.push({\n\t\t\ttype: \"Tag\",\n\t\t});\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(this.doctype)) {\n\t\t\t// indicator\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view();\n\t\t// Add rest from in_list_view docfields\n\t\tthis.columns = this.columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter((df) => {\n\t\t\t\t\tif (frappe.has_indicator(this.doctype) && df.fieldname === \"status\") {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view || df.is_virtual) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== this.meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map((df) => ({\n\t\t\t\t\ttype: \"Field\",\n\t\t\t\t\tdf,\n\t\t\t\t}))\n\t\t);\n\n\t\tif (this.list_view_settings.fields) {\n\t\t\tthis.columns = this.reorder_listview_fields();\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 10;\n\t\t}\n\n\t\tthis.columns = this.columns.slice(0, this.list_view_settings.total_fields || total_fields);\n\n\t\tif (\n\t\t\t!this.settings.hide_name_column &&\n\t\t\tthis.meta.title_field &&\n\t\t\tthis.meta.title_field !== \"name\"\n\t\t) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Field\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\treorder_listview_fields() {\n\t\tlet fields_order = [];\n\t\tlet fields = JSON.parse(this.list_view_settings.fields);\n\n\t\t//title and tags field is fixed\n\t\tfields_order.push(this.columns[0]);\n\t\tfields_order.push(this.columns[1]);\n\t\tthis.columns.splice(0, 2);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column = this.columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_documentation_link() {\n\t\tif (this.meta.documentation) {\n\t\t\treturn `<a href=\"${this.meta.documentation}\" target=\"blank\" class=\"meta-description small text-muted\">Need Help?</a>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_no_result_message() {\n\t\tlet help_link = this.get_documentation_link();\n\t\tlet filters = this.filter_area && this.filter_area.get();\n\n\t\tlet has_filters_set = filters && filters.length;\n\t\tlet no_result_message = has_filters_set\n\t\t\t? __(\"No {0} found with matching filters. Clear filters to see all {0}.\", [\n\t\t\t\t\t__(this.doctype),\n\t\t\t  ])\n\t\t\t: this.meta.description\n\t\t\t? __(this.meta.description)\n\t\t\t: __(\"You haven't created a {0} yet\", [__(this.doctype)]);\n\n\t\tlet new_button_label = has_filters_set\n\t\t\t? __(\"Create a new {0}\", [__(this.doctype)], \"Create a new document from list view\")\n\t\t\t: __(\n\t\t\t\t\t\"Create your first {0}\",\n\t\t\t\t\t[__(this.doctype)],\n\t\t\t\t\t\"Create a new document from list view\"\n\t\t\t  );\n\t\tlet empty_state_image =\n\t\t\tthis.settings.empty_state_image ||\n\t\t\t\"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst new_button = this.can_create\n\t\t\t? `<p><button class=\"btn btn-default btn-sm btn-new-doc hidden-xs\">\n\t\t\t\t${new_button_label}\n\t\t\t</button> <button class=\"btn btn-primary btn-new-doc visible-xs\">\n\t\t\t\t${__(\"Create New\", null, \"Create a new document from list view\")}\n\t\t\t</button></p>`\n\t\t\t: \"\";\n\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${no_result_message}</p>\n\t\t\t${new_button}\n\t\t\t${help_link}\n\t\t</div>`;\n\t}\n\n\tfreeze() {\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_count) {\n\t\t\tthis.get_count_element().html(\n\t\t\t\t`<span>${__(\"Refreshing\", null, \"Document count in list view\")}...</span>`\n\t\t\t);\n\t\t}\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_comment_count) {\n\t\t\targs.with_comment_count = 1;\n\t\t} else {\n\t\t\targs.with_comment_count = 0;\n\t\t}\n\n\t\treturn args;\n\t}\n\n\tbefore_refresh() {\n\t\tif (frappe.route_options && this.filter_area) {\n\t\t\tthis.filters = this.parse_filters_from_route_options();\n\t\t\tfrappe.route_options = null;\n\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\treturn this.filter_area\n\t\t\t\t\t.clear(false)\n\t\t\t\t\t.then(() => this.filter_area.set(this.filters));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tparse_filters_from_settings() {\n\t\treturn (this.settings.filters || []).map((f) => {\n\t\t\tif (f.length === 3) {\n\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_actions_menu_button(this.$result.find(\".list-row-check:checked\").length > 0);\n\t}\n\n\ttoggle_actions_menu_button(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.page.show_actions_menu();\n\t\t\tthis.page.clear_primary_action();\n\t\t} else {\n\t\t\tthis.page.hide_actions_menu();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t}\n\n\trender_header(refresh_header = false) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find(\".list-row-head\").remove();\n\t\t}\n\t\tif (this.$result.find(\".list-row-head\").length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html());\n\t\t}\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton(\n\t\t\t'<div><input type=\"checkbox\" class=\"render-list-checkbox\"/></div>'\n\t\t);\n\t\tthis.$result.append($row);\n\t}\n\n\tbefore_render() {\n\t\tthis.settings.before_render && this.settings.before_render();\n\t\tfrappe.model.user_settings.save(this.doctype, \"last_view\", this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tfilters: this.filter_area && this.filter_area.get(),\n\t\t\tsort_by: this.sort_selector && this.sort_selector.sort_by,\n\t\t\tsort_order: this.sort_selector && this.sort_selector.sort_order,\n\t\t});\n\t\tthis.toggle_paging && this.$paging_area.toggle(false);\n\t}\n\n\tafter_render() {\n\t\tthis.$no_result.html(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`);\n\t\tthis.setup_new_doc_event();\n\t\tthis.toggle_paging && this.$paging_area.toggle(true);\n\t}\n\n\trender() {\n\t\tthis.render_list();\n\t\tthis.set_group_by();\n\t\tthis.set_rows_as_checked();\n\t\tthis.render_count();\n\t}\n\n\tset_group_by() {\n\t\tconst me = this\n\t\tme.page.add_inner_button(__(\"Group By\"), async function () {\n        let options = await getOptions();\n\n        let d = new frappe.ui.Dialog({\n          title: __(\"Group By\"),\n          fields: [\n            {\n              label: __(\"Select Items\"),\n              fieldname: \"items\",\n              fieldtype: \"MultiSelect\",\n              options: options,\n            },\n          ],\n          primary_action_label: __(\"Apply\"),\n          primary_action(values) {\n            localStorage.setItem(\"item_group_by\", values.items);\n            me.refresh();\n            d.hide();\n            setTimeout(() => {\n              localStorage.setItem(\"item_group_by\", \"\");\n            }, 3000);\n          },\n        });\n\n        d.show();\n      });\n\t}\n\n\trender_list() {\n\t\tfunction formatKey(key) {\n\t\t\treturn key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\n\t\t}\n\t\n\t\t// clear rows\n\t\tthis.$result.find(\".list-row-container\").remove();\n\t\tlet group_by = localStorage.getItem(\"item_group_by\")\n\t\t\n\t\tif (this.data.length > 0){\n\t\t\tif (group_by.length) {\n\t\t\t\tlet group_by_filters = group_by.replace(\" \", \"\").split(\",\"); // User-defined grouping criteria\n\t\t\t\tconsole.log(group_by_filters);\n\t\t\t\n\t\t\t\tfunction groupData(data, filters, currentLevel = 0) {\n\t\t\t\t\tif (currentLevel >= filters.length) return data;\n\t\t\t\n\t\t\t\t\tlet groupedData = data.reduce((acc, doc) => {\n\t\t\t\t\t\tlet key = doc[filters[currentLevel]] || \"No \" + formatKey(filters[currentLevel]);\n\t\t\t\t\t\tif (!acc[key]) {\n\t\t\t\t\t\t\tacc[key] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tacc[key].push(doc);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {});\n\t\t\t\n\t\t\t\t\treturn groupedData;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tfunction renderGroups(groupedData, filters, currentLevel = 0, padding = 5, parentName = '') {\n\t\t\t\t\tfor (let group in groupedData) {\n\t\t\t\t\t\tlet fullGroupName = parentName ? `${parentName} - ${group}` : group;\n\t\t\t\t\t\tlet display_class = currentLevel > 0 ? \"d-none\" : \"\";\n\t\t\t\t\t\tlet parentAttr = parentName ? `data-parent-name=\"${parentName}\"` : '';\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.$result.append(`\n\t\t\t\t\t\t\t<div class=\"list-row-container group-row ${display_class}\" data-group-name=\"${fullGroupName}\" tabindex=\"1\" ${parentAttr}>\n\t\t\t\t\t\t\t\t<div class=\"level list-row\" style=\"padding-left: ${padding}px;\">\n\t\t\t\t\t\t\t\t\t<div class=\"list-group-title\">${group}</div>\n\t\t\t\t\t\t\t\t\t<div>${groupedData[group].length}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"list-row-border\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`);\n\t\t\t\n\t\t\t\t\t\tif (currentLevel < filters.length - 1) {\n\t\t\t\t\t\t\tlet nextGroupedData = groupData(groupedData[group], filters, currentLevel + 1);\n\t\t\t\t\t\t\trenderGroups.call(this, nextGroupedData, filters, currentLevel + 1, padding + 10, fullGroupName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgroupedData[group].forEach(doc => {\n\t\t\t\t\t\t\t\tlet list_row = this.get_list_row_html(doc);\n\t\t\t\t\t\t\t\tthis.$result.append(`<div class=\"grouped_rows d-none\" data-group-by=\"${fullGroupName}\" data-parent-name=\"${fullGroupName}\" style=\"padding-left: ${padding + 20}px;\">\n\t\t\t\t\t\t\t\t\t${list_row}\n\t\t\t\t\t\t\t\t</div>`);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\tlet groupedData = groupData(this.data, group_by_filters);\n\t\t\t\trenderGroups.call(this, groupedData, group_by_filters);\n\t\t\t}else {\n\t\t\t\tlet idx = 0;\n\t\t\t\tfor (let doc of this.data) {\n\t\t\t\t\tdoc._idx = idx++;\n\t\t\t\t\tthis.$result.append(this.get_list_row_html(doc));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\n\trender_count() {\n\t\tif (this.list_view_settings.disable_count) return;\n\n\t\tlet me = this;\n\t\tlet $count = this.get_count_element();\n\t\tthis.get_count_str().then((count) => {\n\t\t\t$count.html(`<span>${count}</span>`);\n\t\t\tif (this.count_upper_bound && this.count_upper_bound == this.total_count) {\n\t\t\t\t$count.attr(\n\t\t\t\t\t\"title\",\n\t\t\t\t\t__(\n\t\t\t\t\t\t\"The count shown is an estimated count. Click here to see the accurate count.\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\t$count.tooltip({ delay: { show: 600, hide: 100 }, trigger: \"hover\" });\n\t\t\t\t$count.on(\"click\", () => {\n\t\t\t\t\tme.count_upper_bound = 0;\n\t\t\t\t\t$count.off(\"click\");\n\t\t\t\t\t$count.tooltip(\"disable\");\n\t\t\t\t\tme.freeze();\n\t\t\t\t\tme.render_count();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget_count_element() {\n\t\treturn this.$result.find(\".list-count\");\n\t}\n\n\tget_header_html() {\n\t\tif (!this.columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item\" data-sort-by=\"${subject_field.fieldname}\"\n\t\t\t\ttitle=\"${__(\"Click to sort by {0}\", [subject_field.label])}\">\n\t\t\t\t${__(subject_field.label)}\n\t\t\t</span>\n\t\t`;\n\t\tconst $columns = this.columns\n\t\t\t.map((col) => {\n\t\t\t\tlet classes = [\n\t\t\t\t\t\"list-row-col ellipsis\",\n\t\t\t\t\tcol.type == \"Subject\" ? \"list-subject level\" : \"hidden-xs\",\n\t\t\t\t\tcol.type == \"Tag\" ? \"tag-col hide\" : \"\",\n\t\t\t\t\tfrappe.model.is_numeric_field(col.df) ? \"text-right\" : \"\",\n\t\t\t\t].join(\" \");\n\n\t\t\t\tlet html = \"\";\n\t\t\t\tif (col.type === \"Subject\") {\n\t\t\t\t\thtml = subject_html;\n\t\t\t\t} else {\n\t\t\t\t\tconst fieldname = col.df?.fieldname;\n\t\t\t\t\tconst label = __(col.df?.label || col.type, null, col.df?.parent);\n\t\t\t\t\tconst title = __(\"Click to sort by {0}\", [label]);\n\t\t\t\t\tconst attrs = fieldname ? `data-sort-by=\"${fieldname}\" title=\"${title}\"` : \"\";\n\t\t\t\t\thtml = `<span ${attrs}>${label}</span>`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"${classes}\">${html}</div>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tconst right_html = `\n\t\t\t<span class=\"list-count\"></span>\n\t\t\t<span class=\"level-item list-liked-by-me hidden-xs\">\n\t\t\t\t<span title=\"${__(\"Liked by me\")}\">\n\t\t\t\t\t${frappe.utils.icon(\"es-solid-heart\", \"sm\", \"like-icon\")}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton($columns, right_html);\n\t}\n\n\tget_header_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<header class=\"level list-row-head text-muted\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tget_left_html(doc) {\n\t\treturn this.columns.map((col) => this.get_column_html(col, doc)).join(\"\");\n\t}\n\n\tget_right_html(doc) {\n\t\treturn this.get_meta_html(doc);\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(this.get_left_html(doc), this.get_right_html(doc));\n\t}\n\n\tget_list_row_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-border\"></div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_column_html(col, doc) {\n\t\tif (col.type === \"Status\" || col.df?.options == \"Workflow State\") {\n\t\t\tlet show_workflow_state = col.df?.options == \"Workflow State\";\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc, show_workflow_state)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tif (col.type === \"Tag\") {\n\t\t\tconst tags_display_class = !this.tags_shown ? \"hide\" : \"\";\n\t\t\tlet tags_html = doc._user_tags\n\t\t\t\t? this.get_tags_html(doc._user_tags, 2, true)\n\t\t\t\t: '<div class=\"tags-empty\">-</div>';\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col tag-col ${tags_display_class} hidden-xs ellipsis\">\n\t\t\t\t\t${tags_html}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tconst link_title_fieldname = this.link_field_title_fields[fieldname];\n\t\tconst value = doc[fieldname] || \"\";\n\t\tlet value_display = link_title_fieldname\n\t\t\t? doc[fieldname + \"_\" + link_title_fieldname] || value\n\t\t\t: value;\n\n\t\tlet translated_doctypes = frappe.boot?.translated_doctypes || [];\n\t\tif (translated_doctypes.includes(df.options)) {\n\t\t\tvalue_display = __(value_display);\n\t\t}\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === \"Code\") {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === \"Percent\") {\n\t\t\t\treturn `<div class=\"progress\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\tlet strip_html_required =\n\t\t\t\tdf.fieldtype == \"Text Editor\" ||\n\t\t\t\t(df.fetch_from && [\"Text\", \"Small Text\"].includes(df.fieldtype));\n\n\t\t\tif (strip_html_required) {\n\t\t\t\t_value = strip_html(value_display);\n\t\t\t} else {\n\t\t\t\t_value =\n\t\t\t\t\ttypeof value_display === \"string\"\n\t\t\t\t\t\t? frappe.utils.escape_html(value_display)\n\t\t\t\t\t\t: value_display;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Rating\") {\n\t\t\t\tlet out_of_ratings = df.options || 5;\n\t\t\t\t_value = _value * out_of_ratings;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Image\") {\n\t\t\t\thtml = df.options\n\t\t\t\t\t? `<img src=\"${doc[df.options]}\"\n\t\t\t\t\tstyle=\"max-height: 30px; max-width: 100%;\">`\n\t\t\t\t\t: `<div class=\"missing-image small\">\n\t\t\t\t\t\t${frappe.utils.icon(\"restriction\")}\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === \"Select\") {\n\t\t\t\thtml = `<span class=\"filterable indicator-pill ${frappe.utils.guess_colour(\n\t\t\t\t\t_value\n\t\t\t\t)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t<span class=\"ellipsis\"> ${__(_value)} </span>\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === \"Link\") {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (\n\t\t\t\t[\"Text Editor\", \"Text\", \"Small Text\", \"HTML Editor\", \"Markdown Editor\"].includes(\n\t\t\t\t\tdf.fieldtype\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thtml = `<span class=\"ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${frappe.utils.escape_html(value)}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${frappe.utils.escape_html(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: \"list-subject level\",\n\t\t\tField: \"hidden-xs\",\n\t\t};\n\t\tconst css_class = [\n\t\t\t\"list-row-col ellipsis\",\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? \"text-right\" : \"\",\n\t\t].join(\" \");\n\n\t\tlet column_html;\n\t\tif (\n\t\t\tthis.settings.formatters &&\n\t\t\tthis.settings.formatters[fieldname] &&\n\t\t\tcol.type !== \"Subject\"\n\t\t) {\n\t\t\tcolumn_html = this.settings.formatters[fieldname](value, df, doc);\n\t\t} else {\n\t\t\tcolumn_html = {\n\t\t\t\tSubject: this.get_subject_element(doc, value_display).innerHTML,\n\t\t\t\tField: field_html(),\n\t\t\t}[col.type];\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_tags_html(user_tags, limit, colored = false) {\n\t\tlet get_tag_html = (tag) => {\n\t\t\tlet color = \"\",\n\t\t\t\tstyle = \"\";\n\t\t\tif (tag) {\n\t\t\t\tif (colored) {\n\t\t\t\t\tcolor = frappe.get_palette(tag);\n\t\t\t\t\tstyle = `background-color: var(${color[0]}); color: var(${color[1]})`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"tag-pill ellipsis\" title=\"${tag}\" style=\"${style}\">${tag}</div>`;\n\t\t\t}\n\t\t};\n\t\treturn user_tags\n\t\t\t.split(\",\")\n\t\t\t.slice(1, limit + 1)\n\t\t\t.map(get_tag_html)\n\t\t\t.join(\"\");\n\t}\n\n\tget_meta_html(doc) {\n\t\tlet html = \"\";\n\n\t\tlet settings_button = null;\n\t\tif (this.settings.button && this.settings.button.show(doc)) {\n\t\t\tsettings_button = `\n\t\t\t\t<span class=\"list-actions\">\n\t\t\t\t\t<button class=\"btn btn-action btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${doc.name}\" data-idx=\"${doc._idx}\"\n\t\t\t\t\t\ttitle=\"${this.settings.button.get_description(doc)}\">\n\t\t\t\t\t\t${this.settings.button.get_label(doc)}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tconst modified = comment_when(doc.modified, true);\n\n\t\tlet assigned_to = ``;\n\n\t\tlet assigned_users = doc._assign ? JSON.parse(doc._assign) : [];\n\t\tif (assigned_users.length) {\n\t\t\tassigned_to = `<div class=\"list-assignments d-flex align-items-center\">\n\t\t\t\t\t${frappe.avatar_group(assigned_users, 3, { filterable: true })[0].outerHTML}\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tlet comment_count = null;\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_comment_count) {\n\t\t\tcomment_count = `<span class=\"comment-count d-flex align-items-center\">\n\t\t\t\t${frappe.utils.icon(\"es-line-chat-alt\")}\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count || 0}\n\t\t\t</span>`;\n\t\t}\n\n\t\thtml += `\n\t\t\t<div class=\"level-item list-row-activity hidden-xs\">\n\t\t\t\t<div class=\"hidden-md hidden-xs\">\n\t\t\t\t\t${settings_button || assigned_to}\n\t\t\t\t</div>\n\t\t\t\t<span class=\"modified\">${modified}</span>\n\t\t\t\t${comment_count || \"\"}\n\t\t\t\t${comment_count ? '<span class=\"mx-2\">\u00B7</span>' : \"\"}\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_count_str() {\n\t\tlet current_count = this.data.length;\n\t\tlet count_without_children = this.data.uniqBy((d) => d.name).length;\n\n\t\treturn frappe.db\n\t\t\t.count(this.doctype, {\n\t\t\t\tfilters: this.get_filters_for_args(),\n\t\t\t\tlimit: this.count_upper_bound,\n\t\t\t})\n\t\t\t.then((total_count) => {\n\t\t\t\tthis.total_count = total_count || current_count;\n\t\t\t\tthis.count_without_children =\n\t\t\t\t\tcount_without_children !== current_count ? count_without_children : undefined;\n\n\t\t\t\tlet count_str;\n\t\t\t\tif (this.total_count === this.count_upper_bound) {\n\t\t\t\t\tcount_str = `${format_number(this.total_count - 1, null, 0)}+`;\n\t\t\t\t} else {\n\t\t\t\t\tcount_str = format_number(this.total_count, null, 0);\n\t\t\t\t}\n\n\t\t\t\tlet str = __(\"{0} of {1}\", [format_number(current_count, null, 0), count_str]);\n\t\t\t\tif (this.count_without_children) {\n\t\t\t\t\tstr = __(\"{0} of {1} ({2} rows with children)\", [\n\t\t\t\t\t\tcount_without_children,\n\t\t\t\t\t\tcount_str,\n\t\t\t\t\t\tcurrent_count,\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t});\n\t}\n\n\tget_form_link(doc) {\n\t\tif (this.settings.get_form_link) {\n\t\t\treturn this.settings.get_form_link(doc);\n\t\t}\n\n\t\treturn `/app/${encodeURIComponent(\n\t\t\tfrappe.router.slug(frappe.router.doctype_layout || this.doctype)\n\t\t)}/${encodeURIComponent(cstr(doc.name))}`;\n\t}\n\n\tget_seen_class(doc) {\n\t\tconst seen_by = doc._seen ? JSON.parse(doc._seen) : [];\n\t\treturn seen_by.includes(frappe.session.user) ? \"\" : \"bold\";\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = doc._liked_by ? JSON.parse(doc._liked_by) : [];\n\t\tconst is_liked = liked_by.includes(frappe.session.user);\n\t\tconst title = liked_by.map((u) => frappe.user_info(u).fullname).join(\", \");\n\n\t\tconst div = document.createElement(\"div\");\n\t\tdiv.appendChild(\n\t\t\tthis._element_factory.get_like_element(doc.name, is_liked, liked_by, title)\n\t\t);\n\n\t\treturn div.innerHTML;\n\t}\n\n\tget_subject_element(doc, title) {\n\t\tconst ef = this._element_factory;\n\t\tconst div = document.createElement(\"div\");\n\t\tconst checkboxspan = ef.get_checkboxspan_element();\n\n\t\tconst ellipsisSpan = document.createElement(\"span\");\n\t\tconst seen = this.get_seen_class(doc);\n\t\tif (seen) {\n\t\t\tellipsisSpan.classList.add(\"level-item\", seen, \"ellipsis\");\n\t\t}\n\n\t\tdiv.appendChild(checkboxspan).appendChild(ef.get_checkbox_element(doc.name));\n\t\tdiv.appendChild(ellipsisSpan).appendChild(\n\t\t\tef.get_link_element(\n\t\t\t\tdoc.name,\n\t\t\t\tthis.get_form_link(doc),\n\t\t\t\tthis.get_subject_text(doc, title)\n\t\t\t)\n\t\t);\n\n\t\treturn div;\n\t}\n\n\tget_subject_text(doc, title) {\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet value = title || doc[subject_field.fieldname];\n\t\tif (this.settings.formatters && this.settings.formatters[subject_field.fieldname]) {\n\t\t\tlet formatter = this.settings.formatters[subject_field.fieldname];\n\t\t\tvalue = formatter(value, subject_field, doc);\n\t\t}\n\n\t\tif (!value) {\n\t\t\tvalue = doc.name;\n\t\t}\n\n\t\tif (frappe.model.html_fieldtypes.includes(subject_field.fieldtype)) {\n\t\t\t// NOTE: this is very slow, so only do it for HTML fields\n\t\t\treturn frappe.utils.html2text(value);\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tget_indicator_html(doc, show_workflow_state) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype, show_workflow_state);\n\t\t// sequence is important\n\t\tconst docstatus_description = [\n\t\t\t__(\"Document is in draft state\"),\n\t\t\t__(\"Document has been submitted\"),\n\t\t\t__(\"Document has been cancelled\"),\n\t\t];\n\t\tconst title = docstatus_description[doc.docstatus || 0];\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator-pill ${\n\t\t\t\tindicator[1]\n\t\t\t} filterable no-indicator-dot ellipsis\"\n\t\t\t\tdata-filter='${indicator[2]}' title='${title}'>\n\t\t\t\t<span class=\"ellipsis\"> ${__(indicator[0])}</span>\n\t\t\t</span>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return \"\";\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(indicator[0])}'></span>`;\n\t}\n\n\tget_image_url(doc) {\n\t\tlet url = doc.image ? doc.image : doc[this.meta.image_field];\n\t\t// absolute url for mobile\n\t\tif (window.cordova && !frappe.utils.is_url(url)) {\n\t\t\turl = frappe.base_url + url;\n\t\t}\n\t\treturn url || null;\n\t}\n\n\tsetup_events() {\n\t\tthis.setup_filterable();\n\t\tthis.setup_sort_by();\n\t\tthis.setup_list_click();\n\t\tthis.setup_drag_click();\n\t\tthis.setup_tag_event();\n\t\tthis.setup_new_doc_event();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_action_handler();\n\t\tthis.setup_keyboard_navigation();\n\t}\n\n\tsetup_keyboard_navigation() {\n\t\tlet focus_first_row = () => {\n\t\t\tthis.$result.find(\".list-row-container:first\").focus();\n\t\t};\n\t\tlet focus_next = () => {\n\t\t\t$(document.activeElement).next().focus();\n\t\t};\n\t\tlet focus_prev = () => {\n\t\t\t$(document.activeElement).prev().focus();\n\t\t};\n\t\tlet list_row_focused = () => {\n\t\t\treturn $(document.activeElement).is(\".list-row-container\");\n\t\t};\n\t\tlet check_row = ($row) => {\n\t\t\tlet $input = $row.find(\"input[type=checkbox]\");\n\t\t\t$input.click();\n\t\t};\n\t\tlet get_list_row_if_focused = () =>\n\t\t\tlist_row_focused() ? $(document.activeElement) : null;\n\n\t\tlet is_current_page = () => this.page.wrapper.is(\":visible\");\n\t\tlet is_input_focused = () => $(document.activeElement).is(\"input\");\n\n\t\tlet handle_navigation = (direction) => {\n\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\n\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\tif ($list_row) {\n\t\t\t\tdirection === \"down\" ? focus_next() : focus_prev();\n\t\t\t} else {\n\t\t\t\tfocus_first_row();\n\t\t\t}\n\t\t};\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"down\",\n\t\t\taction: () => handle_navigation(\"down\"),\n\t\t\tdescription: __(\"Navigate list down\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"up\",\n\t\t\taction: () => handle_navigation(\"up\"),\n\t\t\tdescription: __(\"Navigate list up\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+down\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_next();\n\t\t\t},\n\t\t\tdescription: __(\n\t\t\t\t\"Select multiple list items\",\n\t\t\t\tnull,\n\t\t\t\t\"Description of a list view shortcut\"\n\t\t\t),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+up\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_prev();\n\t\t\t},\n\t\t\tdescription: __(\n\t\t\t\t\"Select multiple list items\",\n\t\t\t\tnull,\n\t\t\t\t\"Description of a list view shortcut\"\n\t\t\t),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"enter\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\t$list_row.find(\"a[data-name]\")[0].click();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Open list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"space\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\tcheck_row($list_row);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Select list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tsetup_filterable() {\n\t\t// filterable events\n\t\tthis.$result.on(\"click\", \".filterable\", (e) => {\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\t\t\te.stopPropagation();\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst filters = $this.attr(\"data-filter\").split(\"|\");\n\t\t\tconst filters_to_apply = filters.map((f) => {\n\t\t\t\tf = f.split(\",\");\n\t\t\t\tif (f[2] === \"Today\") {\n\t\t\t\t\tf[2] = frappe.datetime.get_today();\n\t\t\t\t} else if (f[2] == \"User\") {\n\t\t\t\t\tf[2] = frappe.session.user;\n\t\t\t\t}\n\t\t\t\tthis.filter_area.remove(f[0]);\n\t\t\t\treturn [this.doctype, f[0], f[1], f.slice(2).join(\",\")];\n\t\t\t});\n\t\t\tthis.filter_area.add(filters_to_apply);\n\t\t});\n\t}\n\n\tsetup_sort_by() {\n\t\tthis.$result.on(\"click\", \"[data-sort-by]\", (e) => {\n\t\t\tconst sort_by = e.currentTarget.getAttribute(\"data-sort-by\");\n\t\t\tif (!sort_by) return;\n\t\t\tlet sort_order = \"asc\"; // always start with asc\n\t\t\tif (this.sort_by === sort_by) {\n\t\t\t\t// unless it's the same field, then toggle\n\t\t\t\tsort_order = this.sort_order === \"asc\" ? \"desc\" : \"asc\";\n\t\t\t}\n\t\t\tthis.sort_selector.set_value(sort_by, sort_order);\n\t\t\tthis.on_sort_change(sort_by, sort_order);\n\t\t});\n\t}\n\n\tsetup_list_click() {\n\t\tthis.$result.on(\"click\", \".list-row, .image-view-header, .file-header\", (e) => {\n\t\t\tconst $target = $(e.target);\n\t\t\t// tick checkbox if Ctrl/Meta key is pressed\n\t\t\tif ((e.ctrlKey || e.metaKey) && !$target.is(\"a\")) {\n\t\t\t\tconst $list_row = $(e.currentTarget);\n\t\t\t\tconst $check = $list_row.find(\".list-row-checkbox\");\n\t\t\t\t$check.prop(\"checked\", !$check.prop(\"checked\"));\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.on_row_checked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't open form when checkbox, like, filterable are clicked\n\t\t\tif (\n\t\t\t\t$target.hasClass(\"filterable\") ||\n\t\t\t\t$target.hasClass(\"select-like\") ||\n\t\t\t\t$target.hasClass(\"file-select\") ||\n\t\t\t\t$target.hasClass(\"list-row-like\") ||\n\t\t\t\t$target.is(\":checkbox\")\n\t\t\t) {\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// link, let the event be handled via set_route\n\t\t\tif ($target.is(\"a\")) return;\n\n\t\t\t// clicked on the row, open form\n\t\t\tconst $row = $(e.currentTarget);\n\t\t\tconst link = $row.find(\".list-subject a\").get(0);\n\t\t\tif (link) {\n\t\t\t\tfrappe.set_route(link.pathname);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_drag_click() {\n\t\t/*\n\t\t\tClick on the check box in the list view and\n\t\t\tdrag through the rows to select.\n\n\t\t\tDo it again to unselect.\n\n\t\t\tIf the first click is on checked checkbox, then it will unselect rows on drag,\n\t\t\telse if it is unchecked checkbox, it will select rows on drag.\n\t\t*/\n\t\tthis.dragClick = false;\n\t\tthis.$result.on(\"mousedown\", \".list-row-checkbox\", (e) => {\n\t\t\te.stopPropagation?.();\n\t\t\te.preventDefault?.();\n\t\t\tthis.dragClick = true;\n\t\t\tthis.check = !e.target.checked;\n\t\t});\n\t\t$(document).on(\"mouseup\", () => {\n\t\t\tthis.dragClick = false;\n\t\t});\n\t\tthis.$result.on(\"mousemove\", \".level.list-row\", (e) => {\n\t\t\tif (this.dragClick) {\n\t\t\t\tthis.check_row_on_drag(e, this.check);\n\t\t\t}\n\t\t});\n\t}\n\n\tcheck_row_on_drag(event, check = true) {\n\t\t$(event.target).find(\".list-row-checkbox\").prop(\"checked\", check);\n\t\tthis.on_row_checked();\n\t}\n\n\tsetup_action_handler() {\n\t\tthis.$result.on(\"click\", \".btn-action\", (e) => {\n\t\t\tconst $button = $(e.currentTarget);\n\t\t\tconst doc = this.data[$button.attr(\"data-idx\")];\n\t\t\tthis.settings.button.action(doc);\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on(\"change\", \"input[type=checkbox]\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\tif ($target.is(\".list-header-subject .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\".checkbox-actions .list-check-all\");\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t\t$check.trigger(\"change\");\n\t\t\t} else if ($target.is(\".checkbox-actions .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\".list-header-subject .list-check-all\");\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\n\t\t\t\tthis.$result.find(\".list-row-checkbox\").prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t} else if ($target.attr(\"data-parent\")) {\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(`.${$target.attr(\"data-parent\")}`)\n\t\t\t\t\t.find(\".list-row-checkbox\")\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-row-checkbox\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\t// shift select checkboxes\n\t\t\tif (e.shiftKey && this.$checkbox_cursor && !$target.is(this.$checkbox_cursor)) {\n\t\t\t\tconst name_1 = decodeURIComponent(this.$checkbox_cursor.data().name);\n\t\t\t\tconst name_2 = decodeURIComponent($target.data().name);\n\t\t\t\tconst index_1 = this.data.findIndex((d) => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex((d) => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data.slice(min_index + 1, max_index).map((d) => d.name);\n\t\t\t\tconst selector = docnames\n\t\t\t\t\t.map((name) => `.list-row-checkbox[data-name=\"${encodeURIComponent(name)}\"]`)\n\t\t\t\t\t.join(\",\");\n\t\t\t\tthis.$result.find(selector).prop(\"checked\", true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\n\t\t\tthis.update_checkbox($target);\n\t\t});\n\n\t\tlet me = this;\n\t\tthis.page.actions_btn_group.on(\"show.bs.dropdown\", () => {\n\t\t\tme.toggle_workflow_actions();\n\t\t});\n\t}\n\n\tsetup_like() {\n\t\tthis.$result.on(\"click\", \".like-action\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst { doctype, name } = $this.data();\n\t\t\tfrappe.ui.toggle_like($this, doctype, name);\n\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-liked-by-me\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\t$this.toggleClass(\"active\");\n\n\t\t\tif ($this.hasClass(\"active\")) {\n\t\t\t\tthis.filter_area.add(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"_liked_by\",\n\t\t\t\t\t\"like\",\n\t\t\t\t\t\"%\" + frappe.session.user + \"%\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.filter_area.remove(\"_liked_by\");\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_new_doc_event() {\n\t\tthis.$no_result.find(\".btn-new-doc\").click(() => {\n\t\t\tif (this.settings.primary_action) {\n\t\t\t\tthis.settings.primary_action();\n\t\t\t} else {\n\t\t\t\tthis.make_new_doc();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_tag_event() {\n\t\tthis.tags_shown = false;\n\t\tthis.list_sidebar &&\n\t\t\tthis.list_sidebar.parent.on(\"click\", \".list-tag-preview\", () => {\n\t\t\t\tthis.tags_shown = !this.tags_shown;\n\t\t\t\tthis.toggle_tags();\n\t\t\t});\n\t}\n\n\tsetup_realtime_updates() {\n\t\tthis.pending_document_refreshes = [];\n\n\t\tif (this.list_view_settings?.disable_auto_refresh || this.realtime_events_setup) {\n\t\t\treturn;\n\t\t}\n\t\tfrappe.realtime.doctype_subscribe(this.doctype);\n\t\tfrappe.realtime.off(\"list_update\");\n\t\tfrappe.realtime.on(\"list_update\", (data) => {\n\t\t\tif (data?.doctype !== this.doctype) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if some bulk operation is happening by selecting list items, don't refresh\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.avoid_realtime_update()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.pending_document_refreshes.push(data);\n\t\t\tthis.debounced_refresh();\n\t\t});\n\t\tthis.realtime_events_setup = true;\n\t}\n\n\tdisable_realtime_updates() {\n\t\tfrappe.realtime.doctype_unsubscribe(this.doctype);\n\t\tthis.realtime_events_setup = false;\n\t}\n\n\tprocess_document_refreshes() {\n\t\tif (!this.pending_document_refreshes.length) return;\n\n\t\tconst route = frappe.get_route() || [];\n\t\tif (!cur_list || route[0] != \"List\" || cur_list.doctype != route[1]) {\n\t\t\t// wait till user is back on list view before refreshing\n\t\t\tthis.pending_document_refreshes = [];\n\t\t\tthis.disable_realtime_updates();\n\t\t\treturn;\n\t\t}\n\n\t\tconst names = this.pending_document_refreshes.map((d) => d.name);\n\t\tthis.pending_document_refreshes = this.pending_document_refreshes.filter(\n\t\t\t(d) => names.indexOf(d.name) === -1\n\t\t);\n\n\t\tif (!names.length) return;\n\n\t\t// filters to get only the doc with this name\n\t\tconst call_args = this.get_call_args();\n\t\tcall_args.args.filters.push([this.doctype, \"name\", \"in\", names]);\n\t\tcall_args.args.start = 0;\n\n\t\tfrappe.call(call_args).then(({ message }) => {\n\t\t\tif (!message) return;\n\t\t\tconst data = frappe.utils.dict(message.keys, message.values);\n\n\t\t\tif (!(data && data.length)) {\n\t\t\t\t// this doc was changed and should not be visible\n\t\t\t\t// in the listview according to filters applied\n\t\t\t\t// let's remove it manually\n\t\t\t\tthis.data = this.data.filter((d) => !names.includes(d.name));\n\t\t\t\tfor (let name of names) {\n\t\t\t\t\tthis.$result\n\t\t\t\t\t\t.find(`.list-row-checkbox[data-name='${name.replace(/'/g, \"\\\\'\")}']`)\n\t\t\t\t\t\t.closest(\".list-row-container\")\n\t\t\t\t\t\t.remove();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.forEach((datum) => {\n\t\t\t\tconst index = this.data.findIndex((doc) => doc.name === datum.name);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\t// append new data\n\t\t\t\t\tthis.data.push(datum);\n\t\t\t\t} else {\n\t\t\t\t\t// update this data in place\n\t\t\t\t\tthis.data[index] = datum;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tconst a_value = a[this.sort_by] || \"\";\n\t\t\t\tconst b_value = b[this.sort_by] || \"\";\n\n\t\t\t\tlet return_value = 0;\n\t\t\t\tif (a_value > b_value) {\n\t\t\t\t\treturn_value = 1;\n\t\t\t\t}\n\n\t\t\t\tif (b_value > a_value) {\n\t\t\t\t\treturn_value = -1;\n\t\t\t\t}\n\n\t\t\t\tif (this.sort_order === \"desc\") {\n\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t}\n\t\t\t\treturn return_value;\n\t\t\t});\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\tthis.set_rows_as_checked();\n\t\t\t}\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.render_list();\n\t\t});\n\t}\n\n\tavoid_realtime_update() {\n\t\tif (this.filter_area?.is_being_edited()) {\n\t\t\treturn true;\n\t\t}\n\t\t// this is set when a bulk operation is called from a list view which might update the list view\n\t\t// this is to avoid the list view from refreshing a lot of times\n\t\t// the list view is updated once after the bulk operation is complete\n\t\tif (this.disable_list_update) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tset_rows_as_checked() {\n\t\tif (!this.$checks || !this.$checks.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t$.each(this.$checks, (i, el) => {\n\t\t\tlet docname = $(el).attr(\"data-name\");\n\t\t\tthis.$result.find(`.list-row-checkbox[data-name='${docname}']`).prop(\"checked\", true);\n\t\t});\n\t\tthis.on_row_checked();\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject =\n\t\t\tthis.$list_head_subject || this.$result.find(\"header .list-header-subject\");\n\t\tthis.$checkbox_actions =\n\t\t\tthis.$checkbox_actions || this.$result.find(\"header .checkbox-actions\");\n\n\t\tthis.$checks = this.$result.find(\".list-row-checkbox:checked\");\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject.find(\".list-check-all\").prop(\"checked\", false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions\n\t\t\t\t.find(\".list-header-meta\")\n\t\t\t\t.html(__(\"{0} items selected\", [this.$checks.length]));\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t\tthis.update_checkbox();\n\t\tthis.toggle_actions_menu_button(this.$checks.length > 0);\n\t}\n\n\ttoggle_tags() {\n\t\tthis.$result.find(\".tag-col\").toggleClass(\"hide\");\n\t\tconst preview_label = this.tags_shown ? __(\"Hide Tags\") : __(\"Show Tags\");\n\t\tthis.list_sidebar.parent.find(\".list-tag-preview\").text(preview_label);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || []).map((check) =>\n\t\t\tcstr(unescape($(check).data().name))\n\t\t);\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter((d) => docnames.includes(d.name));\n\t}\n\n\tclear_checked_items() {\n\t\tthis.$checks && this.$checks.prop(\"checked\", false);\n\t\tthis.on_row_checked();\n\t}\n\n\tsave_view_user_settings(obj) {\n\t\treturn frappe.model.user_settings.save(this.doctype, this.view_name, obj);\n\t}\n\n\ton_update() {}\n\n\tupdate_url_with_filters() {\n\t\tif (frappe.get_route_str() == this.page_name && !this.report_name) {\n\t\t\t// only update URL if the route still matches current page.\n\t\t\t// do not update if current list is a \"saved report\".\n\t\t\twindow.history.replaceState(null, null, this.get_url_with_filters());\n\t\t}\n\t}\n\n\tget_url_with_filters() {\n\t\tlet search_params = this.get_search_params();\n\n\t\tlet full_url = window.location.href.replace(window.location.search, \"\");\n\t\tif (search_params.size) {\n\t\t\tfull_url += \"?\" + search_params.toString();\n\t\t}\n\t\treturn full_url;\n\t}\n\n\tget_search_params() {\n\t\tlet search_params = new URLSearchParams();\n\n\t\tthis.get_filters_for_args().forEach((filter) => {\n\t\t\tif (filter[2] === \"=\") {\n\t\t\t\tsearch_params.append(filter[1], filter[3]);\n\t\t\t} else {\n\t\t\t\tsearch_params.append(filter[1], JSON.stringify([filter[2], filter[3]]));\n\t\t\t}\n\t\t});\n\t\treturn search_params;\n\t}\n\n\tget_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst items = [];\n\n\t\tif (frappe.model.can_import(doctype, null, this.meta)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Import\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"data-import\", {\n\t\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"user-permission\", {\n\t\t\t\t\t\tallow: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Role Permissions Manager\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", {\n\t\t\t\t\t\tdoctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tfrappe.model.can_create(\"Custom Field\") &&\n\t\t\tfrappe.model.can_create(\"Property Setter\")\n\t\t) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Customize\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tif (!this.meta) return;\n\t\t\t\t\tif (this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"doctype\", doctype);\n\t\t\t\t\t} else if (!this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"customize-form\", {\n\t\t\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t\tshortcut: \"Ctrl+J\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Toggle Sidebar\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.toggle_side_bar(),\n\t\t\tcondition: () => !this.hide_sidebar,\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+K\",\n\t\t});\n\n\t\tif (frappe.user.has_role(\"System Manager\") && frappe.boot.developer_mode === 1) {\n\t\t\t// edit doctype\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Edit DocType\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => frappe.set_route(\"form\", \"doctype\", doctype),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"System Manager\")) {\n\t\t\tif (this.get_view_settings) {\n\t\t\t\titems.push(this.get_view_settings());\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"List Settings\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.show_list_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_list_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew ListSettings({\n\t\t\t\tlistview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.list_view_settings,\n\t\t\t\tmeta: frappe.get_meta(this.doctype),\n\t\t\t});\n\t\t});\n\t}\n\n\tget_workflow_action_menu_items() {\n\t\tconst workflow_actions = [];\n\t\tconst me = this;\n\n\t\tif (frappe.model.has_workflow(this.doctype)) {\n\t\t\tconst actions = frappe.workflow.get_all_transition_actions(this.doctype);\n\t\t\tactions.forEach((action) => {\n\t\t\t\tworkflow_actions.push({\n\t\t\t\t\tlabel: __(action),\n\t\t\t\t\tname: action,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tme.disable_list_update = true;\n\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t.xcall(\"frappe.model.workflow.bulk_workflow_approval\", {\n\t\t\t\t\t\t\t\tdocnames: this.get_checked_items(true),\n\t\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\tme.disable_list_update = false;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tis_workflow_action: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn workflow_actions;\n\t}\n\n\ttoggle_workflow_actions() {\n\t\tif (!frappe.model.has_workflow(this.doctype)) return;\n\n\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\tthis.workflow_action_items[key].addClass(\"disabled\");\n\t\t});\n\t\tconst checked_items = this.get_checked_items();\n\n\t\tfrappe\n\t\t\t.xcall(\"frappe.model.workflow.get_common_transition_actions\", {\n\t\t\t\tdocs: checked_items,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((actions) => {\n\t\t\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\t\t\tthis.workflow_action_items[key].removeClass(\"disabled\");\n\t\t\t\t\tthis.workflow_action_items[key].toggle(actions.includes(key));\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new BulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only &&\n\t\t\t\t!field_doc.is_virtual\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.assign(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.apply_assignment_rule(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.add_tags(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map((docname) =>\n\t\t\t\t\t\tdocname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tlet message = __(\n\t\t\t\t\t\t\"Delete {0} item permanently?\",\n\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t);\n\t\t\t\t\tif (docnames.length > 1) {\n\t\t\t\t\t\tmessage = __(\n\t\t\t\t\t\t\t\"Delete {0} items permanently?\",\n\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.confirm(message, () => {\n\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\tbulk_operations.delete(docnames, () => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Cancel {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"cancel\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Submit {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"submit\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign({}, field_doc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.edit(this.get_checked_items(true), field_mappings, () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_export = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Export\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.export(doctype, docnames);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype) && !frappe.model.has_workflow(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\tactions_menu_items.push(bulk_export());\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (frappe.model.can_cancel(doctype) && !frappe.model.has_workflow(doctype)) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype) && !frappe.model.has_workflow(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n\n\tparse_filters_from_route_options() {\n\t\tconst filters = [];\n\n\t\tfor (let field in frappe.route_options) {\n\t\t\tlet doctype = null;\n\t\t\tlet value = frappe.route_options[field];\n\n\t\t\tlet value_array;\n\t\t\tif ($.isArray(value) && value[0].startsWith(\"[\") && value[0].endsWith(\"]\")) {\n\t\t\t\tvalue_array = [];\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvalue_array.push(JSON.parse(value[i]));\n\t\t\t\t}\n\t\t\t} else if (typeof value === \"string\" && value.startsWith(\"[\") && value.endsWith(\"]\")) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t}\n\n\t\t\t// if `Child DocType.fieldname`\n\t\t\tif (field.includes(\".\")) {\n\t\t\t\tdoctype = field.split(\".\")[0];\n\t\t\t\tfield = field.split(\".\")[1];\n\t\t\t}\n\n\t\t\t// find the table in which the key exists\n\t\t\t// for example the filter could be {\"item_code\": \"X\"}\n\t\t\t// where item_code is in the child table.\n\n\t\t\t// we can search all tables for mapping the doctype\n\t\t\tif (!doctype) {\n\t\t\t\tdoctype = frappe.meta.get_doctype_for_field(this.doctype, field);\n\t\t\t}\n\n\t\t\tif (doctype) {\n\t\t\t\tif (value_array) {\n\t\t\t\t\tfor (var j = 0; j < value_array.length; j++) {\n\t\t\t\t\t\tif ($.isArray(value_array[j])) {\n\t\t\t\t\t\t\tfilters.push([doctype, field, value_array[j][0], value_array[j][1]]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.push([doctype, field, \"=\", value_array[j]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isArray(value)) {\n\t\t\t\t\tfilters.push([doctype, field, value[0], value[1]]);\n\t\t\t\t} else {\n\t\t\t\t\tfilters.push([doctype, field, \"=\", value]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n};\n\nfrappe.get_list_view = (doctype) => {\n\tlet route = `List/${doctype}/List`;\n\treturn frappe.views.list_view[route];\n};\n\nclass ElementFactory {\n\t/* Pre-create templates for HTML Elements on initialization and provide them\n\tvia the get_xxx_element methods. */\n\tconstructor(doctype) {\n\t\tthis.templates = {\n\t\t\tcheckbox: this.create_checkbox_element(doctype),\n\t\t\tcheckboxspan: this.create_checkboxspan_element(),\n\t\t\tlink: this.create_link_element(doctype),\n\t\t\tlike: this.create_like_element(doctype),\n\t\t};\n\t}\n\n\tcreate_checkbox_element(doctype) {\n\t\tconst checkbox = document.createElement(\"input\");\n\t\tcheckbox.classList.add(\"list-row-checkbox\");\n\t\tcheckbox.type = \"checkbox\";\n\t\tcheckbox.dataset.doctype = doctype;\n\t\treturn checkbox;\n\t}\n\n\tcreate_link_element(doctype) {\n\t\tconst link = document.createElement(\"a\");\n\t\tlink.classList.add(\"ellipsis\");\n\t\tlink.dataset.doctype = doctype;\n\n\t\treturn link;\n\t}\n\n\tcreate_checkboxspan_element() {\n\t\tconst checkboxspan = document.createElement(\"span\");\n\t\tcheckboxspan.classList.add(\"level-item\", \"select-like\");\n\n\t\treturn checkboxspan;\n\t}\n\n\tcreate_like_element(doctype) {\n\t\tconst like = document.createElement(\"span\");\n\t\tlike.classList.add(\"like-action\");\n\t\tlike.innerHTML = frappe.utils.icon(\"es-solid-heart\", \"sm\", \"like-icon\");\n\t\tlike.dataset.doctype = doctype;\n\n\t\treturn like;\n\t}\n\n\tget_checkbox_element(name) {\n\t\tconst checkbox = this.templates.checkbox.cloneNode(true);\n\t\tcheckbox.dataset.name = name;\n\t\treturn checkbox;\n\t}\n\n\tget_checkboxspan_element() {\n\t\treturn this.templates.checkboxspan.cloneNode(true);\n\t}\n\n\tget_link_element(name, href, text) {\n\t\tconst link = this.templates.link.cloneNode(true);\n\t\tlink.dataset.name = name;\n\t\tlink.href = href;\n\t\tlink.title = text;\n\t\tlink.textContent = text;\n\n\t\treturn link;\n\t}\n\n\tget_like_element(name, liked, liked_by, title) {\n\t\tconst like = this.templates.like.cloneNode(true);\n\t\tlike.dataset.name = name;\n\n\t\tconst heart_classes = liked ? [\"liked-by\", \"liked\"] : [\"not-liked\"];\n\t\tlike.classList.add(...heart_classes);\n\n\t\tlike.setAttribute(\"data-liked-by\", liked_by || \"[]\");\n\t\tlike.setAttribute(\"title\", title);\n\n\t\treturn like;\n\t}\n}\n\n$(document).on(\"click\", \".group-row\", (e) => {\n\tlet group_name = $(e.currentTarget).data(\"group-name\")\n\t$(\".grouped_rows\").not(`[data-parent-name='${group_name}']`).addClass(\"d-none\")\n\t$(`[data-parent-name='${group_name}']`).toggleClass(\"d-none\")\n})\n\n\nasync function getOptions() {\n\tlet options = processArray(cur_list.fields);\n\treturn options;\n}\n\nfunction processArray(arr) {\n\tlet result = [];\n\n\tarr.forEach((item) => {\n\t\tif (item.length > 0) {\n\t\tlet fieldnameValue = item[0];\n\t\tlet label = fieldnameValue\n\t\t\t.replace(/_/g, \" \")\n\t\t\t.replace(/\\b\\w/g, (char) => char.toUpperCase());\n\n\t\tresult.push({\n\t\t\tfieldname: fieldnameValue,\n\t\t\tvalue: fieldnameValue,\n\t\t\tlabel: label,\n\t\t});\n\t\t}\n\t});\n\n\treturn result;\n}", "(function() {\n\t$(document).keydown(function(e) {\n\t\tif (e.ctrlKey && e.keyCode == 13) {\n\t\t\t$(document.activeElement).parents(\"[data-fieldtype=Table]\").find(\".grid-add-row\").click();\n\t\t}\n\t});\n})();\n", "\n(function() {\n\tconst get_cur_doc_index = () => {\n\t\tconst dt = cur_frm.doc.doctype\n\t\tlet filters, sort_field, sort_order;\n\t\tlet list_view = frappe.get_list_view(dt);\n\n\t\tif (list_view) {\n\t\t\tfilters = list_view.get_filters_for_args();\n\t\t\tsort_field = list_view.sort_by;\n\t\t\tsort_order = list_view.sort_order;\n\t\t} else {\n\t\t\tlet list_settings = frappe.get_user_settings(dt)[\"List\"];\n\t\t\tif (list_settings) {\n\t\t\tfilters = list_settings.filters;\n\t\t\tsort_field = list_settings.sort_by;\n\t\t\tsort_order = list_settings.sort_order;\n\t\t\t}\n\t\t}\n\n\t\tlet args = {\n\t\t\tdoctype: cur_frm.doc.doctype,\n\t\t\tdocname: cur_frm.doc.name,\n\t\t\tfilters,\n\t\t\tsort_order,\n\t\t\tsort_field,\n\t\t};\n\t\t\n\t\tif (cur_frm.is_new()) return;\n\t\tfrappe.call(\"idara_deva.events.item.get_cur_doc_index\", args).then((r) => {\n\t\t\tif (r.message) {\n\t\t\t\tlet id = 'page-' + dt.replace(/\\s/g, '\\\\ ');\n\t\t\t\tlet selector = '#' + id;\t\n\t\t\t\t\n\t\t\t\tconst button = $(`\n\t\t\t\t\t<button class=\"text-muted btn btn-default pagination-btn icon-btn\">\n\t\t\t\t\t${r.message}\n\t\t\t\t\t</button>\n\t\t\t\t`);\n\n\t\t\t\t$(\".pagination-btn\").remove()\n\t\t\t\t$(selector).find(\".standard-actions\").prepend(button);\n\t\t\t}\n\t\t});\n\t};\n\n\tfrappe.router.on(\"change\", function() {\n\t\tvar route = frappe.get_route();\n\t\tif (route.length > 2 && route[0] === \"Form\" && route[1] != route[2]) {\n\t\t\tlet get_page_number_interval= setInterval(() => {\n\t\t\t\tif ($(\".page-icon-group:visible\").length) {\n\t\t\t\t\tget_cur_doc_index();\n\t\t\t\t\tclearInterval(get_page_number_interval);\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t}\n\t});\n})();", "const doctypes = [\n  \"Sales Order\",\n  \"Delivery Note\",\n  \"Purchase Order\",\n  \"Purchase Receipt\",\n];\n\nfor (const doctype of doctypes) {\n  frappe.ui.form.on(doctype, {\n    onload: function (frm) {\n      frm.savesubmit = function (btn, callback, on_error) {\n        var me = this;\n\n        return new Promise((resolve) => {\n          me.script_manager.trigger(\"before_submit\").then(function () {\n            frappe.validated = true;\n\n            me.save(\n              \"Submit\",\n              function (r) {\n                if (r.exc) {\n                  me.handle_save_fail(btn, on_error);\n                } else {\n                  frappe.utils.play_sound(\"submit\");\n                  callback && callback();\n                  me.script_manager\n                    .trigger(\"on_submit\")\n                    .then(() => resolve(me))\n                    .then(() => {\n                      if (frappe.route_hooks.after_submit) {\n                        let route_callback = frappe.route_hooks.after_submit;\n                        delete frappe.route_hooks.after_submit;\n                        route_callback(me);\n                      }\n                    });\n                }\n              },\n              btn,\n              () => me.handle_save_fail(btn, on_error),\n              resolve\n            );\n          });\n        });\n      };\n    },\n  });\n}\n", "const doctypes = [\n  \"Sales Order\",\n  \"Sales Invoice\",\n  \"Purchase Order\",\n  \"Purchase Invoice\",\n];\n\nfor (const doctype of doctypes) {\n  frappe.ui.form.on(doctype, {\n    custom_item_template: function (frm) {\n      const dt = frm.doctype;\n\n      if ([\"Sales Order\", \"Sales Invoice\"].includes(dt) && !frm.doc.customer) {\n        frappe.throw(\"Please select Customer first!\");\n      }\n\n      if (\n        [\"Purchase Order\", \"Purchase Invoice\"].includes(dt) &&\n        !frm.doc.supplier\n      ) {\n        frappe.throw(\"Please select Supplier first!\");\n      }\n\n      frappe.prompt(\n        [\n          {\n            label: \"Item Template\",\n            fieldname: \"item_template\",\n            fieldtype: \"Link\",\n            options: \"Item\",\n            get_query: function () {\n              return {\n                filters: {\n                  has_variants: 1,\n                },\n              };\n            },\n          },\n        ],\n        function (values) {\n          let template_item = values.item_template;\n\n          if (!template_item) {\n            frappe.throw(\"Please select Item Template first!\");\n          }\n\n          let query_args = {\n            query: \"idara_deva.events.item_variants.get_variants\",\n            filters: { variant_of: template_item },\n          };\n\n          let add_items = new frappe.ui.form.MultiSelectDialog({\n            doctype: \"Item\",\n            target: frm,\n            setters: {},\n            add_filters_group: 1,\n            date_field: \"\",\n            columns: [\"name\", \"qty\"],\n            get_query: function () {\n              return query_args;\n            },\n            action: function (selections) {\n              for (let row of selections) {\n                let child = frm.add_child(\"items\");\n                const cdt = child.doctype;\n                const cdn = child.name;\n\n                let qty = $(add_items.$parent[0])\n                  .find(`[data-variant_item_name=\"${row}\"]`)\n                  .val();\n                frappe.model.set_value(cdt, cdn, \"item_code\", row);\n                frappe.model.set_value(cdt, cdn, \"qty\", qty);\n                frm.refresh_field(\"items\");\n              }\n\n              $(add_items.$parent[0]).parents(\".modal\").click();\n            },\n          });\n        }\n      );\n    },\n  });\n}\n"],
  "mappings": "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",
  "names": ["BulkOperations", "doctype", "docs", "print_settings", "allow_print_for_draft", "is_submittable", "allow_print_for_cancelled", "letterheads", "MAX_PRINT_LIMIT", "valid_docs", "doc", "dialog", "args", "default_print_format", "with_letterhead", "print_format", "json_string", "letterhead", "pdf_options", "response", "task_id", "data", "letterhead_options", "r", "docnames", "done", "failed", "f", "assign_to", "action", "failed_docnames", "comma_separated_records", "field_mappings", "field_options", "a", "b", "status_regex", "default_field", "value", "set_value_field", "show_help_text", "fieldname", "dialogObj", "new_df", "options", "txt", "data_exporter", "ListSettings", "listview", "doctype", "meta", "settings", "me", "list_view_settings", "values", "r", "field_count", "is_status_field", "field", "fields_html", "wrapper", "fields", "total_fields", "idx", "is_sortable", "show_sortable_handle", "can_remove", "add_new_fields", "remove_fields", "fieldname", "existing_fields", "f", "fields_order", "d", "value", "dialog", "multiselect_fields", "new_fields", "removed_fields", "column", "route", "doctype", "last_view", "opts", "ElementFactory", "saved_filters", "f", "sort_by", "sort_order", "filters", "valid_fields", "df", "item", "$item", "match_rules_list", "entry", "fields", "resolve", "meta", "interval", "doctype_name", "label", "options", "list_view_settings", "refresh_header", "target", "$check_all_checkbox", "get_df", "fields_in_list_view", "total_fields", "fields_order", "fld", "col", "field", "column", "help_link", "has_filters_set", "no_result_message", "new_button_label", "empty_state_image", "new_button", "args", "toggle", "$row", "me", "getOptions", "d", "values", "formatKey", "key", "char", "group_by", "groupData", "data", "currentLevel", "acc", "doc", "renderGroups", "groupedData", "padding", "parentName", "group", "fullGroupName", "display_class", "parentAttr", "nextGroupedData", "list_row", "group_by_filters", "idx", "$count", "count", "subject_field", "subject_html", "$columns", "_a", "_b", "_c", "classes", "html", "fieldname", "title", "right_html", "left", "right", "show_workflow_state", "tags_display_class", "tags_html", "link_title_fieldname", "value", "value_display", "format", "field_html", "_value", "out_of_ratings", "css_class", "column_html", "user_tags", "limit", "colored", "get_tag_html", "tag", "color", "style", "settings_button", "modified", "assigned_to", "assigned_users", "comment_count", "current_count", "count_without_children", "total_count", "count_str", "str", "liked_by", "is_liked", "u", "div", "ef", "checkboxspan", "ellipsisSpan", "seen", "formatter", "indicator", "url", "focus_first_row", "focus_next", "focus_prev", "list_row_focused", "check_row", "get_list_row_if_focused", "is_current_page", "is_input_focused", "handle_navigation", "direction", "$list_row", "filters_to_apply", "$target", "$check", "link", "event", "check", "$button", "e", "name_1", "name_2", "index_1", "index_2", "min_index", "max_index", "selector", "name", "$this", "names", "call_args", "message", "datum", "index", "a", "b", "a_value", "b_value", "return_value", "i", "el", "docname", "preview_label", "only_docnames", "docnames", "obj", "search_params", "full_url", "filter", "items", "ListSettings", "workflow_actions", "action", "checked_items", "actions", "actions_menu_items", "bulk_operations", "BulkOperations", "is_field_editable", "field_doc", "has_editable_fields", "has_submit_permission", "bulk_assignment", "bulk_assignment_rule", "bulk_add_tags", "bulk_printing", "bulk_delete", "bulk_cancel", "bulk_submit", "bulk_edit", "field_mappings", "bulk_export", "value_array", "j", "checkbox", "like", "href", "text", "liked", "heart_classes", "group_name", "processArray", "arr", "result", "fieldnameValue", "e", "get_cur_doc_index", "dt", "filters", "sort_field", "sort_order", "list_view", "list_settings", "args", "r", "id", "selector", "button", "route", "get_page_number_interval", "doctypes", "doctype", "frm", "btn", "callback", "on_error", "me", "resolve", "r", "route_callback", "doctypes", "doctype", "frm", "dt", "values", "template_item", "query_args", "add_items", "selections", "row", "child", "cdt", "cdn", "qty"]
}
